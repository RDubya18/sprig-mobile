name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'                         # caches based on lockfile if present

      - name: Enable Corepack (for Yarn/PNPM if present)
        run: corepack enable

      - name: Install dependencies (robust)
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: "true" # relax RN peer deps
          NPM_CONFIG_AUDIT: "false"
          NPM_CONFIG_FUND: "false"
        run: |
          echo "Node: $(node -v)"
          echo "NPM:  $(npm -v)"
          if [ -f yarn.lock ]; then
            echo "Detected yarn.lock → Yarn install (no scripts)"
            yarn --version
            yarn install --frozen-lockfile --ignore-scripts
          elif [ -f package-lock.json ]; then
            echo "Detected package-lock.json → npm ci (no scripts)"
            npm ci --no-audit --no-fund --ignore-scripts
          else
            echo "No lockfile → npm install (RN flags, no scripts)"
            npm install --no-audit --no-fund --legacy-peer-deps --ignore-scripts
          fi

      - name: Type check (prefer script; fallback to npx)
        run: |
          if npm run | grep -q "typecheck"; then
            npm run typecheck
          else
            npx tsc -p tsconfig.json --noEmit
          fi

